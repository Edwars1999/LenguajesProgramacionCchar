
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ASIGNACION ASYNC BOOL BREAK BYTE CADENA CASE CHAR CONST CONTINUE DECIMAL DEFAULT DESIGUALDAD DIVISION DO DOUBLE ELSE ENTERO EXTERN FALSE FINSENTENCIA FLOAT FOR FOREACH IF IGUALDAD IN INT LLAVEEND LLAVESTART LONG MAYORIGUAL MAYORQUE MENORIGUAL MENORQUE MODULO MULTIPLICA NEW NULL OR PARENEND PARENSTART PRIVATE PROTECTED PUBLIC RESTA RETURN SBYTE SHORT STATIC STRING SUMA SWITCH THIS TRUE UINT ULONG UNSAFE USHORT VARIABLE VOID WHILEinicializacion : declaracion\n                      | asignacion\n                      | operacionesdeclaracion : tipoDato VARIABLE ASIGNACION dato FINSENTENCIA\n                   | tipoDato VARIABLE FINSENTENCIA\n                   | tipoDato VARIABLE ASIGNACION operaciones FINSENTENCIAasignacion : VARIABLE ASIGNACION dato FINSENTENCIA\n                  | VARIABLE ASIGNACION operaciones FINSENTENCIAdato : VARIABLE \n            | numero\n            | CADENA \n            | boleanotipoDato : INT\n                | FLOAT\n                | DOUBLE\n                | STRING\n                | LONG\n                | CHAR\n                | SHORT\n                | BYTE\n                | SBYTE\n                | UINT\n                | USHORT\n                | ULONGboleano : TRUE\n                | FALSE numero : ENTERO\n             | DECIMALoperaciones :  expresion repOp repOp : operador expresion \n            | operador expresion repOpexpresion : numero\n                 | VARIABLE\n                 | PARENSTART  operaciones PARENENDoperador : SUMA\n                | RESTA\n                | MULTIPLICA\n                | DIVISION\n                | MODULO '
    
_lr_action_items = {'VARIABLE':([0,5,8,9,10,11,12,13,14,15,16,17,18,19,21,25,27,28,29,30,31,32,35,],[6,24,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,34,37,34,-35,-36,-37,-38,-39,37,]),'INT':([0,],[8,]),'FLOAT':([0,],[9,]),'DOUBLE':([0,],[10,]),'STRING':([0,],[11,]),'LONG':([0,],[12,]),'CHAR':([0,],[13,]),'SHORT':([0,],[14,]),'BYTE':([0,],[15,]),'SBYTE':([0,],[16,]),'UINT':([0,],[17,]),'USHORT':([0,],[18,]),'ULONG':([0,],[19,]),'PARENSTART':([0,21,25,27,28,29,30,31,32,35,],[21,21,21,21,-35,-36,-37,-38,-39,21,]),'ENTERO':([0,21,25,27,28,29,30,31,32,35,],[22,22,22,22,-35,-36,-37,-38,-39,22,]),'DECIMAL':([0,21,25,27,28,29,30,31,32,35,],[23,23,23,23,-35,-36,-37,-38,-39,23,]),'$end':([1,2,3,4,20,22,23,26,34,36,45,46,49,50,51,52,53,],[0,-1,-2,-3,-32,-27,-28,-29,-33,-5,-30,-34,-7,-8,-31,-4,-6,]),'ASIGNACION':([6,24,],[25,35,]),'SUMA':([6,7,20,22,23,34,37,40,45,46,],[-33,28,-32,-27,-28,-33,-33,-32,28,-34,]),'RESTA':([6,7,20,22,23,34,37,40,45,46,],[-33,29,-32,-27,-28,-33,-33,-32,29,-34,]),'MULTIPLICA':([6,7,20,22,23,34,37,40,45,46,],[-33,30,-32,-27,-28,-33,-33,-32,30,-34,]),'DIVISION':([6,7,20,22,23,34,37,40,45,46,],[-33,31,-32,-27,-28,-33,-33,-32,31,-34,]),'MODULO':([6,7,20,22,23,34,37,40,45,46,],[-33,32,-32,-27,-28,-33,-33,-32,32,-34,]),'PARENEND':([20,22,23,26,33,34,45,46,51,],[-32,-27,-28,-29,46,-33,-30,-34,-31,]),'FINSENTENCIA':([20,22,23,24,26,34,37,38,39,40,41,42,43,44,45,46,47,48,51,],[-32,-27,-28,36,-29,-33,-9,49,50,-10,-11,-12,-25,-26,-30,-34,52,53,-31,]),'CADENA':([25,35,],[41,41,]),'TRUE':([25,35,],[43,43,]),'FALSE':([25,35,],[44,44,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'inicializacion':([0,],[1,]),'declaracion':([0,],[2,]),'asignacion':([0,],[3,]),'operaciones':([0,21,25,35,],[4,33,39,48,]),'tipoDato':([0,],[5,]),'expresion':([0,21,25,27,35,],[7,7,7,45,7,]),'numero':([0,21,25,27,35,],[20,20,40,20,40,]),'repOp':([7,45,],[26,51,]),'operador':([7,45,],[27,27,]),'dato':([25,35,],[38,47,]),'boleano':([25,35,],[42,42,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> inicializacion","S'",1,None,None,None),
  ('inicializacion -> declaracion','inicializacion',1,'p_inicializacion','sintax.py',11),
  ('inicializacion -> asignacion','inicializacion',1,'p_inicializacion','sintax.py',12),
  ('inicializacion -> operaciones','inicializacion',1,'p_inicializacion','sintax.py',13),
  ('declaracion -> tipoDato VARIABLE ASIGNACION dato FINSENTENCIA','declaracion',5,'p_declaracion','sintax.py',16),
  ('declaracion -> tipoDato VARIABLE FINSENTENCIA','declaracion',3,'p_declaracion','sintax.py',17),
  ('declaracion -> tipoDato VARIABLE ASIGNACION operaciones FINSENTENCIA','declaracion',5,'p_declaracion','sintax.py',18),
  ('asignacion -> VARIABLE ASIGNACION dato FINSENTENCIA','asignacion',4,'p_asignacion','sintax.py',21),
  ('asignacion -> VARIABLE ASIGNACION operaciones FINSENTENCIA','asignacion',4,'p_asignacion','sintax.py',22),
  ('dato -> VARIABLE','dato',1,'p_dato','sintax.py',25),
  ('dato -> numero','dato',1,'p_dato','sintax.py',26),
  ('dato -> CADENA','dato',1,'p_dato','sintax.py',27),
  ('dato -> boleano','dato',1,'p_dato','sintax.py',28),
  ('tipoDato -> INT','tipoDato',1,'p_tipoDato','sintax.py',31),
  ('tipoDato -> FLOAT','tipoDato',1,'p_tipoDato','sintax.py',32),
  ('tipoDato -> DOUBLE','tipoDato',1,'p_tipoDato','sintax.py',33),
  ('tipoDato -> STRING','tipoDato',1,'p_tipoDato','sintax.py',34),
  ('tipoDato -> LONG','tipoDato',1,'p_tipoDato','sintax.py',35),
  ('tipoDato -> CHAR','tipoDato',1,'p_tipoDato','sintax.py',36),
  ('tipoDato -> SHORT','tipoDato',1,'p_tipoDato','sintax.py',37),
  ('tipoDato -> BYTE','tipoDato',1,'p_tipoDato','sintax.py',38),
  ('tipoDato -> SBYTE','tipoDato',1,'p_tipoDato','sintax.py',39),
  ('tipoDato -> UINT','tipoDato',1,'p_tipoDato','sintax.py',40),
  ('tipoDato -> USHORT','tipoDato',1,'p_tipoDato','sintax.py',41),
  ('tipoDato -> ULONG','tipoDato',1,'p_tipoDato','sintax.py',42),
  ('boleano -> TRUE','boleano',1,'p_boleano','sintax.py',45),
  ('boleano -> FALSE','boleano',1,'p_boleano','sintax.py',46),
  ('numero -> ENTERO','numero',1,'p_numero','sintax.py',49),
  ('numero -> DECIMAL','numero',1,'p_numero','sintax.py',50),
  ('operaciones -> expresion repOp','operaciones',2,'p_operaciones','sintax.py',53),
  ('repOp -> operador expresion','repOp',2,'p_repOpe','sintax.py',56),
  ('repOp -> operador expresion repOp','repOp',3,'p_repOpe','sintax.py',57),
  ('expresion -> numero','expresion',1,'p_expresion','sintax.py',60),
  ('expresion -> VARIABLE','expresion',1,'p_expresion','sintax.py',61),
  ('expresion -> PARENSTART operaciones PARENEND','expresion',3,'p_expresion','sintax.py',62),
  ('operador -> SUMA','operador',1,'p_operador','sintax.py',65),
  ('operador -> RESTA','operador',1,'p_operador','sintax.py',66),
  ('operador -> MULTIPLICA','operador',1,'p_operador','sintax.py',67),
  ('operador -> DIVISION','operador',1,'p_operador','sintax.py',68),
  ('operador -> MODULO','operador',1,'p_operador','sintax.py',69),
]
